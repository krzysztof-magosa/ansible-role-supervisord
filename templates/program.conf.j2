; {{ ansible_managed }}

[program:{{ item.key }}]
command = {{ item.value.command }}
{% if item.value.process_name is defined %}
process_name = {{ item.value.process_name }}
{% endif %}
{% if item.value.numprocs is defined %}
numprocs = {{ item.value.numprocs }}
{% endif %}
{% if item.value.numproc_start is defined %}
numprocs_start = {{ item.value.numprocs_start }}
{% endif %}
{% if item.value.priority is defined %}
priority = {{ item.value.priority }}
{% endif %}
{% if item.value.autostart is defined %}
autostart = {{ item.value.autostart | ternary("true", "false") }}
{% endif %}
{% if item.value.startsecs is defined %}
startsecs = {{ item.value.startsecs }}
{% endif %}
{% if item.value.startretries is defined %}
startretries = {{ item.value.startretries }}
{% endif %}
{% if item.value.autorestart is defined %}
{% if item.value.autorestart in [true, false] %}
autorestart = {{ item.value.autorestart | ternary("true", "false") }}
{% else %}
autorestart = {{ item.value.autorestart }}
{% endif %}
{% endif %}
{% if item.value.exitcodes is defined %}
exitcodes = {{ item.value.exitcodes | join(",") }}
{% endif %}
{% if item.value.stopsignal is defined %}
stopsignal = {{ item.value.stopsignal }}
{% endif %}
{% if item.value.stopwaitsecs is defined %}
stopwaitsecs = {{ item.value.stopwaitsecs }}
{% endif %}
{% if item.value.stopasgroup is defined %}
stopasgroup = {{ item.value.stopasgroup | ternary("true", "false") }}
{% endif %}
{% if item.value.killasgroup is defined %}
killasgroup = {{ item.value.killasgroup | ternary("true", "false") }}
{% endif %}
{% if item.value.user is defined %}
user = {{ item.value.user }}
{% endif %}
{% if item.value.redirect_stderr is defined %}
redirect_stderr = {{ item.value.redirect_stderr | ternary("true", "false") }}
{% endif %}
stdout_logfile = {{ item.value.stdout_logfile | default(supervisord_logpath ~ "/" ~ item.key ~ "-stdout.log") }}
{% if item.value.stdout_logfile_maxbytes is defined %}
stdout_logfile_maxbytes = {{ item.value.stdout_logfile_maxbytes }}
{% endif %}
{% if item.value.stdout_logfile_backups is defined %}
stdout_logfile_backups = {{ item.value.stdout_logfile_backups }}
{% endif %}
{% if item.value.stdout_capture_maxbytes is defined %}
stdout_capture_maxbytes = {{ item.value.stdout_capture_maxbytes }}
{% endif %}
{% if item.value.stdout_events_enabled is defined %}
stdout_events_enabled = {{ item.value.stdout_events_enabled | ternary("true", "false") }}
{% endif %}
stderr_logfile = {{ item.value.stderr_logfile | default(supervisord_logpath ~ "/" ~ item.key ~ "-stderr.log") }}
{% if item.value.stderr_logfile_maxbytes is defined %}
stderr_logfile_maxbytes = {{ item.value.stderr_logfile_maxbytes }}
{% endif %}
{% if item.value.stderr_logfile_backups is defined %}
stderr_logfile_backups = {{ item.value.stderr_logfile_backups }}
{% endif %}
{% if item.value.stderr_capture_maxbytes is defined %}
stderr_capture_maxbytes = {{ item.value.stderr_capture_maxbytes }}
{% endif %}
{% if item.value.stderr_events_enabled is defined %}
stderr_events_enabled = {{ item.value.stderr_events_enabled | ternary("true", "false") }}
{% endif %}
{% if item.value.environment is defined and item.value.environment %}
environment = {% for k, v in item.value.environment.items() %}{{ k }}="{{ v }}"{% if not loop.last %},{% endif %}{% endfor %}
{% endif %}
{% if item.value.directory is defined %}
directory = {{ item.value.directory }}
{% endif %}
{% if item.value.umask is defined %}
umask = {{ item.value.umask }}
{% endif %}
{% if item.value.serverurl is defined %}
serverurl = {{ item.value.serverurl }}
{% endif %}
